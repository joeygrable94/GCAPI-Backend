name: CI

on:
  push:
    branches: [ "prod" ]
  pull_request:
    branches: [ "prod" ]
  workflow_dispatch:


jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11"]
        redis-version: ["7"]
    env:
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_API_AUDIENCE: ${{ secrets.AUTH0_API_AUDIENCE }}
      AUTH0_SPA_CLIENT_ID: ${{ secrets.AUTH0_SPA_CLIENT_ID }}
      AUTH0_SPA_CLIENT_SECRET: ${{ secrets.AUTH0_SPA_CLIENT_SECRET }}
      AUTH0_FIRST_ADMIN: ${{ secrets.AUTH0_FIRST_ADMIN }}
      AUTH0_FIRST_ADMIN_PASSWORD: ${{ secrets.AUTH0_FIRST_ADMIN_PASSWORD }}
      CLOUDKEY_GOOGLE_API: ${{ secrets.CLOUDKEY_GOOGLE_API }}
      EMAIL_SMTP_PASSWORD: ${{ secrets.EMAIL_SMTP_PASSWORD }}
      EMAIL_SMTP_USER: ${{ secrets.EMAIL_SMTP_USER }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: ${{ matrix.redis-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip \
          && python -m pip install poetry \
          && poetry config virtualenvs.create false \
          && poetry install --no-root
      - name: Run Python Tests
        run: |
          bash ./scripts/test-cov.sh
      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: false
