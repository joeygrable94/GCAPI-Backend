[tool.poetry]
name = "gcapi-backend"
version = "0.1.0"
description = ""
authors = ["Joey Grable <hello@joeygrable.com>"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
uvicorn = {version = "0.32.0", extras = ["standard"]}
gunicorn = "^22.0.0"
greenlet = "3.0.3"
requests = "^2.32.0"
types-requests = "^2.31.0.10"
cryptography = "43.0.1"
bcrypt = "^4.1.3"
types-passlib = "^1.7.7"
PyJWT = "^2.4.0"
itsdangerous = "^2.1.2"
rsa = "^4.9"
pycryptodome = "^3.19.1"
asgi-lifespan = "^2.0.0"
fastapi = {extras = ["standard"], version = "^0.115.2"}
fastapi-profiler = "^1.3.0"
email-validator = "2.1.1"
pydantic = {version = "2.10.4", extras = ["email"]}
pydantic-settings = "^2.0.3"
python-multipart = "0.0.12"
python-dotenv = "1.0.1"
PyMySQL = "1.1.1"
SQLAlchemy = {version = "2.0.30", extras = ["mypy", "asyncio"]}
SQLAlchemy-Utils = "0.41.2"
alembic = "1.13.3"
Jinja2 = "3.1.4"
anyio = {version = "4.6.2.post1", extras = ["trio"]}
asyncio = "3.4.3"
aiohttp = "3.10.5"
aiosqlite = "0.20.0"
aiomysql = "0.2.0"
aiofiles = "24.1.0"
ultimate-sitemap-parser = "^0.5"
tenacity = "^8.2.2"
sentry-sdk = {version = "^2.11.0", extras = ["fastapi"]}
ruff = "^0.4.3"
typer = "^0.12.3"
sqlalchemy-data-model-visualizer = "^0.1.3"
ipinfo = "^5.0.1"
pydantic-extra-types = "^2.7.0"
pycountry = "^24.6.1"
lxml = "^5.2.1"
lxml-stubs = "^0.5.1"
google-api-python-client = "^2.127.0"
google-auth-httplib2 = "^0.2.0"
google-auth-oauthlib = "^1.2.0"
google-auth-stubs = "^0.3.0"
google-api-python-client-stubs = "^1.25.0"
botocore = "^1.34.113"
boto3 = "^1.34.103"
boto3-stubs = "^1.35.39"
botocore-stubs = "^1.35.14"
asyncpg = "^0.30.0"
psycopg = "^3.2.3"
psycopg2 = "^2.9.10"

[tool.poetry.group.dev.dependencies]
httpx = "^0.27.0"
httpx-oauth = "^0.15.1"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
autopep8 = "^2.3.1"
pep8 = "^1.7.1"
mypy = "^1.12.0"
isort = "^5.13.2"
black = "^24.10.0"
flake8 = "^7.1.1"
autoflake = "^2.3.1"
makefun = "^1.15.6"
asgi-lifespan = "^2.1.0"

[tool.isort]
profile = "black"
src_paths = ["app"]
combine_as_imports = true
line_length = 88

[tool.black]
line_length = 88

[tool.mypy]
python_version = 3.11
ignore_missing_imports = false
disallow_untyped_defs = true
allow_redefinition = true
plugins = '''
    pydantic.mypy,
    sqlalchemy.ext.mypy.plugin
'''

[tool.autoflake]
remove-all-unused-imports = true
remove-unused-variables = true
in-place = true
exclude='''
    __init__.py
'''

[tool.flake8]
max-line-length = 88
exclude = '''
    .git,
    __pycache__,
    .mypy_cache,
    .pytest_cache
'''

[tool.pytest.ini_options]
env = [
    "ENVIRONMENT=pytest",
]
testpaths = "tests"
filterwarnings = ["ignore:SelectableGroups dict interface is deprecated. Use select.:DeprecationWarning", "error"]
plugins = '''
    --cov-config=.coveragerc
    --cov=app
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --no-cov-on-fail
    --asyncio-mode=auto
    tests
'''

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
