"""initial encrypted db

Revision ID: 6832c0e76f58
Revises:
Create Date: 2024-04-29 07:39:49.009909

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils  # type: ignore
from app.db.custom_types import Scopes, LongText


# revision identifiers, used by Alembic.
revision = '6832c0e76f58'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('title', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('description', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=7040), nullable=True),
    sa.Column('is_active', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=428), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_client_id'), 'client', ['id'], unique=True)
    op.create_table('geocoord',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('address', sa.String(length=704), nullable=False),
    sa.Column('latitude', sa.Float(precision=20), nullable=False),
    sa.Column('longitude', sa.Float(precision=20), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('address'),
    sa.UniqueConstraint('address'),
    sa.UniqueConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_table('user',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('auth_id', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('email', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=1752), nullable=False),
    sa.Column('username', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('picture', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=1752), nullable=False),
    sa.Column('is_active', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=428), nullable=False),
    sa.Column('is_verified', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=428), nullable=False),
    sa.Column('is_superuser', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=428), nullable=False),
    sa.Column('scopes', Scopes(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('auth_id'),
    sa.UniqueConstraint('username'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=True)
    op.create_table('website',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('domain', sa.String(length=704), nullable=False),
    sa.Column('is_secure', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('domain'),
    sa.UniqueConstraint('domain'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_website_id'), 'website', ['id'], unique=True)
    op.create_table('bdx_feed',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('username', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('password', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('serverhost', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('client_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_bdx_feed_id'), 'bdx_feed', ['id'], unique=True)
    op.create_table('client_bucket',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('bucket_name', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('object_key', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=3116), nullable=False),
    sa.Column('description', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=7040), nullable=True),
    sa.Column('client_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('client_report',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('title', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('url', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=2048), nullable=False),
    sa.Column('description', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=7040), nullable=True),
    sa.Column('keys', sa.BLOB(), nullable=True),
    sa.Column('client_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_client_report_id'), 'client_report', ['id'], unique=True)
    op.create_table('client_website',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('client_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('website_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['website_id'], ['website.id'], ),
    sa.PrimaryKeyConstraint('client_id', 'website_id')
    )
    op.create_index(op.f('ix_client_website_id'), 'client_website', ['id'], unique=True)
    op.create_table('gcft',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('group_name', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('group_slug', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=408), nullable=False),
    sa.Column('client_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_gcft_id'), 'gcft', ['id'], unique=True)
    op.create_table('go_a4',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('title', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('measurement_id', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=408), nullable=False),
    sa.Column('property_id', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=408), nullable=False),
    sa.Column('client_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('measurement_id'),
    sa.UniqueConstraint('property_id'),
    sa.UniqueConstraint('title'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_go_a4_id'), 'go_a4', ['id'], unique=True)
    op.create_table('go_cloud',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('project_name', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('project_id', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=472), nullable=False),
    sa.Column('project_number', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=472), nullable=False),
    sa.Column('service_account', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=True),
    sa.Column('client_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id'),
    sa.UniqueConstraint('project_name'),
    sa.UniqueConstraint('project_number'),
    sa.UniqueConstraint('service_account'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_go_cloud_id'), 'go_cloud', ['id'], unique=True)
    op.create_table('go_sc',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('title', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('client_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('website_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['website_id'], ['website.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_go_sc_id'), 'go_sc', ['id'], unique=True)
    op.create_table('ipaddress',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('address', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('hostname', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=True),
    sa.Column('is_anycast', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=428), nullable=True),
    sa.Column('city', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=True),
    sa.Column('region', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=True),
    sa.Column('country', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=408), nullable=True),
    sa.Column('loc', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=428), nullable=True),
    sa.Column('org', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=True),
    sa.Column('postal', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=408), nullable=True),
    sa.Column('timezone', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=472), nullable=True),
    sa.Column('country_name', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=True),
    sa.Column('is_eu', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=428), nullable=True),
    sa.Column('country_flag_url', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=3116), nullable=True),
    sa.Column('country_flag_unicode', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=True),
    sa.Column('country_currency_code', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=408), nullable=True),
    sa.Column('continent_code', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=408), nullable=True),
    sa.Column('continent_name', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=408), nullable=True),
    sa.Column('latitude', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=408), nullable=True),
    sa.Column('longitude', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=408), nullable=True),
    sa.Column('geocoord_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['geocoord_id'], ['geocoord.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_ipaddress_id'), 'ipaddress', ['id'], unique=True)
    op.create_table('note',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('title', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('description', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=7040), nullable=False),
    sa.Column('is_active', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=428), nullable=False),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_note_id'), 'note', ['id'], unique=True)
    op.create_table('sharpspring',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('api_key', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('secret_key', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('client_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_sharpspring_id'), 'sharpspring', ['id'], unique=True)
    op.create_table('user_client',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('client_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'client_id')
    )
    op.create_index(op.f('ix_user_client_id'), 'user_client', ['id'], unique=True)
    op.create_table('website_map',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('url', sa.String(length=3116), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('website_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['website_id'], ['website.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_website_map_id'), 'website_map', ['id'], unique=True)
    op.create_table('client_report_note',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('client_report_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('note_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_report_id'], ['client_report.id'], ),
    sa.ForeignKeyConstraint(['note_id'], ['note.id'], ),
    sa.PrimaryKeyConstraint('client_report_id', 'note_id')
    )
    op.create_index(op.f('ix_client_report_note_id'), 'client_report_note', ['id'], unique=True)
    op.create_table('file_asset',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('filename', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('extension', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('size_kb', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=428), nullable=False),
    sa.Column('title', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('caption', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=True),
    sa.Column('keys', sa.BLOB(), nullable=True),
    sa.Column('is_private', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=428), nullable=False),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('bucket_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('client_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('geocoord_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('bdx_feed_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['bdx_feed_id'], ['bdx_feed.id'], ),
    sa.ForeignKeyConstraint(['bucket_id'], ['client_bucket.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['geocoord_id'], ['geocoord.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_file_asset_id'), 'file_asset', ['id'], unique=True)
    op.create_table('go_a4_stream',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('title', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('stream_id', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=408), nullable=False),
    sa.Column('ga4_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('website_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ga4_id'], ['go_a4.id'], ),
    sa.ForeignKeyConstraint(['website_id'], ['website.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stream_id'),
    sa.UniqueConstraint('title'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_go_a4_stream_id'), 'go_a4_stream', ['id'], unique=True)
    op.create_table('go_sc_country',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('keys', sa.BLOB(), nullable=False),
    sa.Column('clicks', sa.Integer(), nullable=False),
    sa.Column('impressions', sa.Integer(), nullable=False),
    sa.Column('ctr', sa.Float(precision=20), nullable=False),
    sa.Column('position', sa.Float(precision=20), nullable=False),
    sa.Column('date_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('gsc_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gsc_id'], ['go_sc.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_go_sc_country_id'), 'go_sc_country', ['id'], unique=True)
    op.create_table('go_sc_device',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('keys', sa.BLOB(), nullable=False),
    sa.Column('clicks', sa.Integer(), nullable=False),
    sa.Column('impressions', sa.Integer(), nullable=False),
    sa.Column('ctr', sa.Float(precision=20), nullable=False),
    sa.Column('position', sa.Float(precision=20), nullable=False),
    sa.Column('date_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('gsc_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gsc_id'], ['go_sc.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_go_sc_device_id'), 'go_sc_device', ['id'], unique=True)
    op.create_table('go_sc_page',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('keys', sa.BLOB(), nullable=False),
    sa.Column('clicks', sa.Integer(), nullable=False),
    sa.Column('impressions', sa.Integer(), nullable=False),
    sa.Column('ctr', sa.Float(precision=20), nullable=False),
    sa.Column('position', sa.Float(precision=20), nullable=False),
    sa.Column('date_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('gsc_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gsc_id'], ['go_sc.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_go_sc_page_id'), 'go_sc_page', ['id'], unique=True)
    op.create_table('go_sc_query',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('keys', sa.BLOB(), nullable=False),
    sa.Column('clicks', sa.Integer(), nullable=False),
    sa.Column('impressions', sa.Integer(), nullable=False),
    sa.Column('ctr', sa.Float(precision=20), nullable=False),
    sa.Column('position', sa.Float(precision=20), nullable=False),
    sa.Column('date_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('gsc_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gsc_id'], ['go_sc.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_go_sc_query_id'), 'go_sc_query', ['id'], unique=True)
    op.create_table('go_sc_searchappearance',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('keys', sa.BLOB(), nullable=False),
    sa.Column('clicks', sa.Integer(), nullable=False),
    sa.Column('impressions', sa.Integer(), nullable=False),
    sa.Column('ctr', sa.Float(precision=20), nullable=False),
    sa.Column('position', sa.Float(precision=20), nullable=False),
    sa.Column('date_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('gsc_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gsc_id'], ['go_sc.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_go_sc_searchappearance_id'), 'go_sc_searchappearance', ['id'], unique=True)
    op.create_table('user_ipaddress',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('ipaddress_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ipaddress_id'], ['ipaddress.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'ipaddress_id')
    )
    op.create_index(op.f('ix_user_ipaddress_id'), 'user_ipaddress', ['id'], unique=True)
    op.create_table('website_page',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('url', sa.String(length=3116), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('priority', sa.Float(), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=True),
    sa.Column('change_frequency', sa.String(length=704), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('website_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('sitemap_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['sitemap_id'], ['website_map.id'], ),
    sa.ForeignKeyConstraint(['website_id'], ['website.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_website_page_id'), 'website_page', ['id'], unique=True)
    op.create_index(op.f('ix_website_page_sitemap_id'), 'website_page', ['sitemap_id'], unique=False)
    op.create_index(op.f('ix_website_page_website_id'), 'website_page', ['website_id'], unique=False)
    op.create_table('gcft_snap',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('snap_name', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=704), nullable=False),
    sa.Column('snap_slug', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=408), nullable=False),
    sa.Column('altitude', sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(length=428), nullable=False),
    sa.Column('file_asset_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('geocoord_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('gcft_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['file_asset_id'], ['file_asset.id'], ),
    sa.ForeignKeyConstraint(['gcft_id'], ['gcft.id'], ),
    sa.ForeignKeyConstraint(['geocoord_id'], ['geocoord.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('snap_slug'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_gcft_snap_id'), 'gcft_snap', ['id'], unique=True)
    op.create_table('website_keywordcorpus',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('corpus', LongText(), nullable=False),
    sa.Column('rawtext', LongText(), nullable=False),
    sa.Column('website_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('page_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['page_id'], ['website_page.id'], ),
    sa.ForeignKeyConstraint(['website_id'], ['website.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_website_keywordcorpus_id'), 'website_keywordcorpus', ['id'], unique=True)
    op.create_table('website_pagespeedinsights',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('strategy', sa.String(length=408), nullable=False),
    sa.Column('ps_weight', sa.Integer(), nullable=False),
    sa.Column('ps_grade', sa.Float(), nullable=False),
    sa.Column('ps_value', sa.String(length=408), nullable=False),
    sa.Column('ps_unit', sa.String(length=408), nullable=False),
    sa.Column('fcp_weight', sa.Integer(), nullable=False),
    sa.Column('fcp_grade', sa.Float(), nullable=False),
    sa.Column('fcp_value', sa.Float(), nullable=False),
    sa.Column('fcp_unit', sa.String(length=408), nullable=False),
    sa.Column('lcp_weight', sa.Integer(), nullable=False),
    sa.Column('lcp_grade', sa.Float(), nullable=False),
    sa.Column('lcp_value', sa.Float(), nullable=False),
    sa.Column('lcp_unit', sa.String(length=408), nullable=False),
    sa.Column('cls_weight', sa.Integer(), nullable=False),
    sa.Column('cls_grade', sa.Float(), nullable=False),
    sa.Column('cls_value', sa.Float(), nullable=False),
    sa.Column('cls_unit', sa.String(length=408), nullable=False),
    sa.Column('si_weight', sa.Integer(), nullable=False),
    sa.Column('si_grade', sa.Float(), nullable=False),
    sa.Column('si_value', sa.Float(), nullable=False),
    sa.Column('si_unit', sa.String(length=408), nullable=False),
    sa.Column('tbt_weight', sa.Integer(), nullable=False),
    sa.Column('tbt_grade', sa.Float(), nullable=False),
    sa.Column('tbt_value', sa.Float(), nullable=False),
    sa.Column('tbt_unit', sa.String(length=408), nullable=False),
    sa.Column('website_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('page_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['page_id'], ['website_page.id'], ),
    sa.ForeignKeyConstraint(['website_id'], ['website.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_website_pagespeedinsights_id'), 'website_pagespeedinsights', ['id'], unique=True)
    op.create_table('gcft_snap_activeduration',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('session_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('active_seconds', sa.INTEGER(), nullable=False),
    sa.Column('visit_date', sa.DateTime(), nullable=False),
    sa.Column('gcft_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('snap_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gcft_id'], ['gcft.id'], ),
    sa.ForeignKeyConstraint(['snap_id'], ['gcft_snap.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_gcft_snap_activeduration_id'), 'gcft_snap_activeduration', ['id'], unique=True)
    op.create_table('gcft_snap_browserreport',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('session_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('browser', sa.String(length=704), nullable=True),
    sa.Column('browser_version', sa.String(length=704), nullable=True),
    sa.Column('platform', sa.String(length=704), nullable=True),
    sa.Column('platform_version', sa.String(length=704), nullable=True),
    sa.Column('desktop', sa.Boolean(), nullable=True),
    sa.Column('tablet', sa.Boolean(), nullable=True),
    sa.Column('mobile', sa.Boolean(), nullable=True),
    sa.Column('city', sa.String(length=704), nullable=True),
    sa.Column('country', sa.String(length=704), nullable=True),
    sa.Column('state', sa.String(length=704), nullable=True),
    sa.Column('language', sa.String(length=704), nullable=True),
    sa.Column('visit_date', sa.DateTime(), nullable=False),
    sa.Column('gcft_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('snap_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gcft_id'], ['gcft.id'], ),
    sa.ForeignKeyConstraint(['snap_id'], ['gcft_snap.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_gcft_snap_browserreport_id'), 'gcft_snap_browserreport', ['id'], unique=True)
    op.create_table('gcft_snap_hotspotclick',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('session_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('reporting_id', sa.String(length=428), nullable=True),
    sa.Column('hotspot_type_name', sa.String(length=428), nullable=True),
    sa.Column('hotspot_content', sa.BLOB(), nullable=True),
    sa.Column('hotspot_icon_name', sa.String(length=704), nullable=True),
    sa.Column('hotspot_name', sa.String(length=704), nullable=True),
    sa.Column('hotspot_user_icon_name', sa.String(length=704), nullable=True),
    sa.Column('linked_snap_name', sa.String(length=704), nullable=True),
    sa.Column('snap_file_name', sa.String(length=704), nullable=True),
    sa.Column('icon_color', sa.String(length=428), nullable=True),
    sa.Column('bg_color', sa.String(length=428), nullable=True),
    sa.Column('text_color', sa.String(length=428), nullable=True),
    sa.Column('hotspot_update_date', sa.DateTime(), nullable=False),
    sa.Column('click_date', sa.DateTime(), nullable=False),
    sa.Column('gcft_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('snap_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gcft_id'], ['gcft.id'], ),
    sa.ForeignKeyConstraint(['snap_id'], ['gcft_snap.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_gcft_snap_hotspotclick_id'), 'gcft_snap_hotspotclick', ['id'], unique=True)
    op.create_table('gcft_snap_trafficsource',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('session_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('referrer', sa.String(length=3116), nullable=False),
    sa.Column('utm_campaign', sa.String(length=704), nullable=True),
    sa.Column('utm_content', sa.String(length=704), nullable=True),
    sa.Column('utm_medium', sa.String(length=704), nullable=True),
    sa.Column('utm_source', sa.String(length=704), nullable=True),
    sa.Column('utm_term', sa.String(length=704), nullable=True),
    sa.Column('visit_date', sa.DateTime(), nullable=False),
    sa.Column('gcft_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('snap_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gcft_id'], ['gcft.id'], ),
    sa.ForeignKeyConstraint(['snap_id'], ['gcft_snap.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_gcft_snap_trafficsource_id'), 'gcft_snap_trafficsource', ['id'], unique=True)
    op.create_table('gcft_snap_view',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('session_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('view_date', sa.DateTime(), nullable=False),
    sa.Column('gcft_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('snap_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['gcft_id'], ['gcft.id'], ),
    sa.ForeignKeyConstraint(['snap_id'], ['gcft_snap.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_gcft_snap_view_id'), 'gcft_snap_view', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_gcft_snap_view_id'), table_name='gcft_snap_view')
    op.drop_table('gcft_snap_view')
    op.drop_index(op.f('ix_gcft_snap_trafficsource_id'), table_name='gcft_snap_trafficsource')
    op.drop_table('gcft_snap_trafficsource')
    op.drop_index(op.f('ix_gcft_snap_hotspotclick_id'), table_name='gcft_snap_hotspotclick')
    op.drop_table('gcft_snap_hotspotclick')
    op.drop_index(op.f('ix_gcft_snap_browserreport_id'), table_name='gcft_snap_browserreport')
    op.drop_table('gcft_snap_browserreport')
    op.drop_index(op.f('ix_gcft_snap_activeduration_id'), table_name='gcft_snap_activeduration')
    op.drop_table('gcft_snap_activeduration')
    op.drop_index(op.f('ix_website_pagespeedinsights_id'), table_name='website_pagespeedinsights')
    op.drop_table('website_pagespeedinsights')
    op.drop_index(op.f('ix_website_keywordcorpus_id'), table_name='website_keywordcorpus')
    op.drop_table('website_keywordcorpus')
    op.drop_index(op.f('ix_gcft_snap_id'), table_name='gcft_snap')
    op.drop_table('gcft_snap')
    op.drop_index(op.f('ix_website_page_website_id'), table_name='website_page')
    op.drop_index(op.f('ix_website_page_sitemap_id'), table_name='website_page')
    op.drop_index(op.f('ix_website_page_id'), table_name='website_page')
    op.drop_table('website_page')
    op.drop_index(op.f('ix_user_ipaddress_id'), table_name='user_ipaddress')
    op.drop_table('user_ipaddress')
    op.drop_index(op.f('ix_go_sc_searchappearance_id'), table_name='go_sc_searchappearance')
    op.drop_table('go_sc_searchappearance')
    op.drop_index(op.f('ix_go_sc_query_id'), table_name='go_sc_query')
    op.drop_table('go_sc_query')
    op.drop_index(op.f('ix_go_sc_page_id'), table_name='go_sc_page')
    op.drop_table('go_sc_page')
    op.drop_index(op.f('ix_go_sc_device_id'), table_name='go_sc_device')
    op.drop_table('go_sc_device')
    op.drop_index(op.f('ix_go_sc_country_id'), table_name='go_sc_country')
    op.drop_table('go_sc_country')
    op.drop_index(op.f('ix_go_a4_stream_id'), table_name='go_a4_stream')
    op.drop_table('go_a4_stream')
    op.drop_index(op.f('ix_file_asset_id'), table_name='file_asset')
    op.drop_table('file_asset')
    op.drop_index(op.f('ix_client_report_note_id'), table_name='client_report_note')
    op.drop_table('client_report_note')
    op.drop_index(op.f('ix_website_map_id'), table_name='website_map')
    op.drop_table('website_map')
    op.drop_index(op.f('ix_user_client_id'), table_name='user_client')
    op.drop_table('user_client')
    op.drop_index(op.f('ix_sharpspring_id'), table_name='sharpspring')
    op.drop_table('sharpspring')
    op.drop_index(op.f('ix_note_id'), table_name='note')
    op.drop_table('note')
    op.drop_index(op.f('ix_ipaddress_id'), table_name='ipaddress')
    op.drop_table('ipaddress')
    op.drop_index(op.f('ix_go_sc_id'), table_name='go_sc')
    op.drop_table('go_sc')
    op.drop_index(op.f('ix_go_cloud_id'), table_name='go_cloud')
    op.drop_table('go_cloud')
    op.drop_index(op.f('ix_go_a4_id'), table_name='go_a4')
    op.drop_table('go_a4')
    op.drop_index(op.f('ix_gcft_id'), table_name='gcft')
    op.drop_table('gcft')
    op.drop_index(op.f('ix_client_website_id'), table_name='client_website')
    op.drop_table('client_website')
    op.drop_index(op.f('ix_client_report_id'), table_name='client_report')
    op.drop_table('client_report')
    op.drop_table('client_bucket')
    op.drop_index(op.f('ix_bdx_feed_id'), table_name='bdx_feed')
    op.drop_table('bdx_feed')
    op.drop_index(op.f('ix_website_id'), table_name='website')
    op.drop_table('website')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_table('geocoord')
    op.drop_index(op.f('ix_client_id'), table_name='client')
    op.drop_table('client')
    # ### end Alembic commands ###
